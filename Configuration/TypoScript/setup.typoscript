plugin.tx_qccomments {
    view {
        templateRootPaths = {$plugin.tx_qccomments.view.templateRootPath}
        partialRootPaths = {$plugin.tx_qccomments.view.partialRootPath}
        layoutRootPath = {$plugin.tx_qccomments.view.layoutRootPath}
    }

    settings {
        comments {
            // if empty default will be 500
            maxCharacters = 500
            minCharacters = 2
            anonymizeComment {
                enabled = 1
                pattern = /(?:[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})|\b\d{3}[-.]?\d{3}[-.]?\d{4}\b/
            }

        }
        options {
          negative_reasons {
            1 {
              code = Negatif Code1
              short_label = Negatif short code 1
              long_label = Negatif long code 1
            }
            2 {
              code = Negatif Code2
              short_label = Negatif short code 2
              long_label = Negatif long code 2
            }
            3 {
              code = Negatif Code3
              short_label = Negatif short code 3
              long_label = Negatif long code 3
            }
          }
          reporting_problem {
            1 {
              code = Problem Code1
              short_label = Problem short code 1
              long_label = Problem long code 1
            }
            2 {
              code = Problem Code2
              short_label = Problem short code 2
              long_label = Problem long code 2
            }
            3 {
              code = Problem Code3
              short_label = Problem short code 3
              long_label = Problem long code 3
            }
          }
        }

        // Activate recaptcha
        recaptcha {
            enabled = 0
            sitekey =
            secret =
        }

        spamshield {
            _enable = 1
            methods{
                # Honeypot check
                1 {
                    _enable = 1
                    name = Honey Pot
                    # Class
                    class = Qc\QcComments\SpamShield\Methods\HoneyPotMethod
                    indication = 5
                }

                # Value blacklist check
                2 {
                    _enable = 1
                    name = Value blacklist check
                    # Class
                    class = Qc\QcComments\SpamShield\Methods\ValueBlacklistMethod
                    indication = 7
                    # method configuration
                    configuration {
                        # Blacklisted values (could also get read from a file - simply with FLUIDTEMPLATE)
                        values = TEXT
                        values.value = viagra,sex,porn,p0rn
                    }
                }

                # Link check : Check the number of allowed links
                3 {
                    _enable = 1
                    name = Link check
                    # Class
                    class = Qc\QcComments\SpamShield\Methods\LinkMethod
                    indication = 3
                    # method configuration
                    configuration {
                        # number of allowed links
                        linkLimit = 2
                    }
                }
            }
        }


    }
}
lib.qcCommentsAdditionalContent = COA
lib.qcCommentsAdditionalContent {
}

page {
    includeJSLibs.jquery = https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js
    includeJS.recaptcha = https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit
    includeJS.commentsForm = EXT:qc_comments/Resources/Public/JavaScript/CommentForm.js
    includeCSS.commentsFormCss = EXT:qc_comments/Resources/Public/Css/fe_qc_comments.css
}

module.tx_qccomments {
    persistence {
        storagePid =
    }

    view {
        templateRootPaths.0 = EXT:qc_comments/Resources/Private/Templates/
        templateRootPaths.1 = {$module.tx_qccomments.view.templateRootPath}
        partialRootPaths.0 = EXT:qc_comments/Resources/Private/Partials/
        partialRootPaths.1 = {$module.tx_qccomments.view.partialRootPath}
        layoutRootPaths.0 = EXT:qc_comments/Resources/Private/Layouts/
        layoutRootPaths.1 = {$module.tx_qccomments.view.layoutRootPath}
    }
}
